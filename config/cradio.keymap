/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <test.dtsi>



&mt {
    flavor = "hold-preferred";
   // tapping_term_ms = <200>;
};

&lt {
    flavor = "balanced";
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};

&sk {
    quick-release;
};

/ { 

    combos {
        compatible = "zmk,combos";
	combo_mouse_1 {
	    timeout-ms = <80>;
	    key-positions = <28 29>;
	    bindings = <&mkp LCLK>;
	};
	combo_ctl_s {
	    timeout-ms = <80>;
	    key-positions = <20 31>;
	    bindings = <&kp LC(S)>;
	};
	combo_ctl_w {
	    timeout-ms = <80>;
	    key-positions = <10 31>;
	    bindings = <&kp LC(W)>;
	};
	/*
	combo_dataloader {
	    timeout-ms = <80>;
	    key-positions = <10 12 18 3>;
	    bindings = <&dataloader_macro>;
	};
	combo_config {
	    timeout-ms = <80>;
	    key-positions = <7 8 23 26>;
	    bindings = <&config_macro>;
	};
	combo_the {
	    timeout-ms = <80>;
	    key-positions = <2 4 15>;
	    bindings = <&the_macro>;
	};
	combo_accessor {
	    timeout-ms = <80>;
	    key-positions = <10 11 23>;
	    bindings = <&accessor_macro>;
	};
	*/

        combo_capsword {
            timeout-ms = <50>;
            key-positions = <4 31>;
            bindings = <&caps_word>;
	};
 
        combo_esc {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp ESC>;
	    slow-release;
        };
        
           combo_ent {
            timeout-ms = <50>;
            key-positions = <13 24>;
            bindings = <&kp RET>;
	    slow-release;
        };

           combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 20>;
            bindings = <&kp BKSP>;
	    slow-release;
        };

           combo_lalt {
            timeout-ms = <50>;
            key-positions = <1 12>;
            bindings = <&kp LALT>;
	    slow-release;
        };

           combo_lgui {
            timeout-ms = <50>;
            key-positions = <1 13>;
            bindings = <&kp LGUI>;
	    slow-release;
        };

           combo_lctl {
            timeout-ms = <50>;
            key-positions = <2 13>;
            bindings = <&kp LCTRL>;
	    slow-release;
        };

           combo_ralt {
            timeout-ms = <50>;
            key-positions = <8 17>;
            bindings = <&kp RALT>;
	    slow-release;
        };

           combo_rgui {
            timeout-ms = <50>;
            key-positions = <8 16>;
            bindings = <&kp RGUI>;
	    slow-release;
        };

           combo_rctl {
            timeout-ms = <50>;
            key-positions = <7 16>;
            bindings = <&kp RCTRL>;
	    slow-release;
        };

           combo_gallium {
            timeout-ms = <50>;
            key-positions = <5 25>;
            bindings = <&tog 1>;
	    slow-release;
        };
	combo_laltgui {
            timeout-ms = <50>;
            key-positions = <11 2 3>;
            bindings = <&kp LA(LGUI)>;
            slow-release;
        };
	combo_laltctl {
            timeout-ms = <50>;
            key-positions = <1 12 3>;
            bindings = <&kp LA(LCTL)>;
            slow-release;
        };
	combo_lguictl {
            timeout-ms = <50>;
            key-positions = <1 2 13>;
            bindings = <&kp LG(LCTL)>;
	    slow-release;
	};
	combo_raltgui {
	    timeout-ms = <50>;
	    key-positions = <6 7 18>;
	    bindings = <&kp RA(RGUI)>;
	    slow-release;
	};
	combo_raltctl {
	    timeout-ms = <50>;
	    key-positions = <6 17 8>;
	    bindings = <&kp RA(RCTL)>;
	    slow-release;
	};
	combo_rguictl {
	    timeout-ms = <50>;
	    key-positions = <16 7 8>;
	    bindings = <&kp RG(RCTL)>;
	    slow-release;
	};

			// home row combos

		// left side

           combo_lhome_alt {
            timeout-ms = <50>;
            key-positions = <31 13>;
            bindings = <&kp LALT>;
	    slow-release;
        };

           combo_lhome_altgui {
            timeout-ms = <50>;
            key-positions = <31 12 13>;
            bindings = <&kp LA(LGUI)>;
	    slow-release;
        };

           combo_lhome_altctl {
            timeout-ms = <50>;
            key-positions = <31 11 13>;
            bindings = <&kp LA(LCTL)>;
	    slow-release;
        };

           combo_lhome_altguictl {
            timeout-ms = <50>;
            key-positions = <31 11 12 13>;
            bindings = <&kp LA(LG(LCTRL))>;
	    slow-release;
        };
        
           combo_lhome_gui {
            timeout-ms = <50>;
            key-positions = <31 12>;
            bindings = <&kp LGUI>;
	    slow-release;
        };
        
           combo_lhome_guictl {
            timeout-ms = <50>;
            key-positions = <31 11 12>;
            bindings = <&kp LG(LCTRL)>;
	    slow-release;
        };
        
           combo_lhome_ctl {
            timeout-ms = <50>;
            key-positions = <31 11>;
            bindings = <&kp LCTRL>;
	    slow-release;
        };

		// right side

           combo_rhome_alt {
            timeout-ms = <50>;
            key-positions = <32 16>;
            bindings = <&kp RALT>;
	    slow-release;
        };

           combo_rhome_altgui {
            timeout-ms = <50>;
            key-positions = <32 17 16>;
            bindings = <&kp RA(RGUI)>;
	    slow-release;
        };

           combo_rhome_altctl {
            timeout-ms = <50>;
            key-positions = <32 18 16>;
            bindings = <&kp RA(RCTL)>;
	    slow-release;
        };

           combo_rhome_altguictl {
            timeout-ms = <50>;
            key-positions = <32 18 17 16>;
            bindings = <&kp RA(RG(RCTRL))>;
	    slow-release;
        };
        
           combo_rhome_gui {
            timeout-ms = <50>;
            key-positions = <32 17>;
            bindings = <&kp RGUI>;
	    slow-release;
        };
        
           combo_rhome_guictl {
            timeout-ms = <50>;
            key-positions = <32 18 17>;
            bindings = <&kp RG(RCTRL)>;
	    slow-release;
        };
        
           combo_rhome_ctl {
            timeout-ms = <50>;
            key-positions = <32 18>;
            bindings = <&kp RCTRL>;
	    slow-release;
        };

	   combo_hyper_lt {
		   timeout-ms = <30>;
		   key-positions = <31 0>;
		   bindings = <&kp LC(LG(LALT))>;
		   slow-release;
	   };

	   combo_hyper_rt {
		   timeout-ms = <30>;
		   key-positions = <32 9>;
		   bindings = <&kp LC(LG(LALT))>;
		   slow-release;
	   };

	   combo_hyper_l {
		   timeout-ms = <30>;
		   key-positions = <21 22>;
		   bindings = <&kp LC(LG(LALT))>;
		   slow-release;
	   };

	   combo_hyper_r {
		   timeout-ms = <30>;
		   key-positions = <27 28>;
		   bindings = <&kp LC(LG(LALT))>;
		   slow-release;
	   };

        
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 					&kp Y 	&kp U  	&kp I   &kp O   &kp P 
		&kp A &kp S &kp D &kp F &kp G 			       	&kp H 	&kp J 	&kp K 	&kp L 	&kp SCLN
		&kp Z &kp X &kp C &kp V	&kp B				    &kp N   &kp M   &kp CMMA &kp DOT &kp SLASH
          				&lt 2 SPC &lt 4 TAB  				&lt 3 BKSP &kp RET 
		>;
		};

       		left_layer {
		bindings = <
		&kp F9    &kp F10    &kp F11    &kp F12    &trans		&trans     &kp N7  &kp N8   &kp N9   &trans 
		&kp F5    &kp F6     &kp F7     &kp F8     &trans		&trans     &kp N4  &kp N5   &kp N6   &trans 
		&kp F1   &kp F2      &kp F3     &kp F4     &trans   	&kp N0     &kp N1  &kp N2   &kp N3   &trans
					     			&mo 2  &mo 5  					&trans &trans 
		>;
		};
		
		right_layer {
		bindings = <
		&kp GRAVE  &kp LBKT &kp RBKT  &kp FSLH  &kp TILDE    			&kp AMPS  &kp KMLT &kp LPRN &kp RPRN &kp DEL
		&kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCT 			&kp CARET &kp AMPS  &kp STAR  &kp MINUS   &kp EQUAL
		&kp QMARK  &kp DQT &kp BKSP &kp BKSP   &kp BKSP    			&kp BKSP &kp BKSP &kp UNDER &kp SQT  &mt RSFT BSLH
					  &trans &trans  				&trans &trans 
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp DEL  &kp PG_DN   &kp UP   &kp PG_UP &kp CAPS			&trans &kp PG_DN   &kp UP   &kp PG_UP  &kp DEL
		&kp HOME &kp LEFT  &kp DOWN &kp RIGHT &kp END					&kp HOME &kp LEFT  &kp DOWN &kp RIGHT &kp END 
		&mo 6  &kp K_VOL_DN  &kp K_VOL_UP &kp K_MUTE &trans   				&trans &kp C_PREV &kp C_PP &kp C_NEXT &trans   
					 &trans &trans  				&trans &trans 
		>;
		};	
        
		bt_layer {
		bindings = <
		&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4        &trans &trans &trans &trans &trans
		&bt BT_SEL 5 &bt BT_SEL 6 &bt BT_SEL 7 &bt BT_SEL 8 &bt BT_SEL 9        &trans &trans &trans &trans &trans
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &out OUT_USB &out OUT_BLE 	       	&trans &trans &trans &trans &trans
          				&bootloader &trans  				&bootloader &bootloader
		>;
		};	
		mouse_layer {
		bindings = <
		&trans &mkp MB4 &mmv MOVE_UP &mkp MB5 &trans        		&trans &mkp MB4 &mmv MOVE_UP &mkp MB5 &trans
		&trans &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans     &trans &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans
		&trans &mkp LCLK &mkp MCLK &mkp RCLK &trans        		&trans &mkp LCLK &mkp MCLK &mkp RCLK &trans
          				&trans &trans  				&trans &trans
		>;
		};	
        
	};
};
